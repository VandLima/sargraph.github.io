var myDate,fileOut,file,headers,DEBUG=0;function showModal(){$("#modal").modal("show"),$(".modal-backdrop.in").hide()}function hideBlock(e){setTimeout(function(){$("#container"+e).html(""),$(".cont"+e+"Block").hide(),remove(".cont"+e+"Block")},10)}function hideNotes(e){setTimeout(function(){$("#container"+e+"Notes").html(""),$("#container"+e+"Notes").fadeOut("fast")},10)}function showBlock(e){setTimeout(function(){$(".cont"+e+"Block").show(),add(".cont"+e+"Block")},10)}function showNotes(e,t){setTimeout(function(){$("#container"+e+"Notes").show(),$("#container"+e+"Notes").html(t)},10)}function show(e){setTimeout(function(){$(e).addClass("show")},0)}function hide(e){setTimeout(function(){$(e).addClass("hide")},0)}function add(e){setTimeout(function(){$(e).addClass("add")},10)}function remove(e){setTimeout(function(){$(e).addClass("remove")},0)}function $import(e){var t=document.createElement("script");t.setAttribute("src",e),t.setAttribute("type","text/javascript"),document.getElementsByTagName("head")[0].appendChild(t)}function $importNoCache(e){$import(e+("?"+(new Date).getTime().toString()))}function homePage(){$("#fileinput").show(),$(".homeContBlock").show();for(var e=0;e<4;e++)hideBlock(String.fromCharCode(65+e));hideBlock("M"),$("#btnDBGo").removeClass("d-flex").addClass("d-none"),$("#btnSave").removeClass("d-flex").addClass("d-none"),$(".reportBlock").hide(),$("#spinner").hide(),$("#spinner").removeClass("d-flex").addClass("d-none"),$("#btnReset").show()}function defaultPage(){$("#fileErr").html(""),$("#homeContBlock").html(""),$("#contABlock").html(""),$("#contBBlock").html(""),$("#contCBlock").html(""),$(".contDash").hide();for(var e=0;e<4;e++)hideBlock(String.fromCharCode(65+e));return hideBlock("M"),$("#btnDBGo").removeClass("d-flex").addClass("d-none"),$("#btnSave").removeClass("d-flex").addClass("d-none"),$("#spinner").removeClass("d-flex").addClass("d-none"),hide("#nav-container, #btnSAR, #btnPage, #btnCPUs, #btnCPU, #btnDevices, #btnInterfaceTraffics, #btnInterfaceErrors, #btnProcesses, #btnSwap, #btnPaging, #btnIO , #btnMem, #btnLoad, #btnNFS, #btnSockets, #btnReport, #btnContact, #btnFile, #btnTTY, #btnMemAlloc, #btnSysCalls, .reportBlock"),!1}function chartPage(){if($("#fileinput").hide(),$("#btnSave").hide(),$(".homeContBlock").hide(),$(".container-notes").hide(),show("#btnDBGo"),$("#btnDBGo").removeClass("d-none").addClass("d-flex"),file){var e;1==DEBUG&&showBlock("M");for(var t=0;t<4;t++)showBlock(e=String.fromCharCode(65+t)),$("#container"+e+"Title").html(""),$("#container"+e+"Notes").html("")}else showBlock("M"),$("#containerM").html("No data to display. Please upload a SAR file in <a href=# onclick=\"$('#btnSAR').click()\">Dashboard</a> Page.")}function updateProgress(e){$("#spinnerVal").html(e+"%")}function percentageToDegrees(e){return e/100*360}function progressBarReset(){$("#spinner").removeClass("d-block").addClass("d-none"),hide("#spinner"),updateProgress(0)}function errorHandler(e){e.target.error.code==e.target.error.NOT_READABLE_ERR&&(document.getElementById("fileErr").innerHTML="Error reading file...")}function getOS(){return fileOut.split(/\r\n|\r|\n/g)[0]?fileOut.split(/\r\n|\r|\n/g)[0].split(",")[0].toUpperCase():fileOut.split(/\r\n|\r|\n/g)[1].split(",")[0].toUpperCase()}function getHostname(){var e;switch(e=fileOut.split(/\r\n|\r|\n/g)[0]?fileOut.split(/\r\n|\r|\n/g)[0]:fileOut.split(/\r\n|\r|\n/g)[1],getOS()){case"LINUX":return e.split(",")[2].replace(/\(/g,"").replace(/\)/g,"");case"AIX":case"SUNOS":return e.split(",")[1].replace(/\(/g,"").replace(/\)/g,"")}}function getKernel(){var e,t,a,n="";switch(e=/\r\n|\r|\n/g,a=(t=fileOut.split(e))[0]||t[1],getOS()){case"LINUX":n=a.split(/,/g)[1];break;case"AIX":n=a.split(/,/g)[4];break;case"SUNOS":n=a.split(/,/g)[3];break;default:n="Unknown"}return n}function getServerInfo(){var e,t,a,n,r,s;switch(e=/\r\n|\r|\n/g,a=(t=fileOut.split(e))[0]||t[1],n=getOS(),r=getHostname(),s=getKernel(),n.toUpperCase()){case"LINUX":case"AIX":$(".homeContainer").html("Hostname: "+r+"<br>OS: "+n+"<br>Kernel: "+s+"<br>");break;case"SUNOS":$(".homeContainer").html("Hostname: "+r+"<br>OS: "+n+"<br>OS Version: "+a.split(",")[2]+"<br>Kernel: "+s+"<br>CPU Type: "+a.split(",")[4])}}function grepHeaders(e){for(var t=[...headers],a=0;a<t.length;a++)if(t[a].match(e))return t[a];return-1}function bytes(e,t){if(0===e)return"";var a=Math.floor(Math.log(bytes)/Math.log(1024)),n=(e/Math.pow(1024,Math.floor(a))).toFixed(2);return a=a<0?-a:a,t&&(n+=" "+["bytes","KB","MB","GB","TB","PB"][a]),n}function prettyTime(e){return formatDate(new Date(e))}function formatDate(e){var t=e.getMonth()+1,a=e.getDate(),n=e.getHours(),r=e.getMinutes();t=t<10?"0"+t:t,a=a<10?"0"+a:a;var s=n>=12?"pm":"am",o=(n=(n%=12)||12)+":"+(r=r<10?"0"+r:r)+" "+s;return e.getFullYear().toString()+t.toString()+a.toString()+"<br>"+o.toString()}function loaded(e){var t,a,n,r,s,o=e.target.result,i="";1===DEBUG&&console.log("Started loaded function"),show("#spinner"),updateProgress(25),t=o.replace(/^.*System configuration.*$/gm,"").replace(/^\s*$(?:\r\n?|\n)/gm,"\n").split("\n"),a=["%usr","device","bread/s","swpin/s","iget/s","rawch/s","proc-sz","msg/s","atch/s","pgout/s","freemem","sml_mem","CPU","proc/s","pswpin/s","pgpgin/s","tps","frmpg/s","kbmemfree","kbswpfree","kbhugfree","dentunusd","runq-sz","DEV","IFACE","call/s","scall/s","totsck","TTY","INTR","slots"],headers=[],1===DEBUG&&console.log("Started parse for loop"),1===DEBUG&&console.log("25%");for(var l=0;l<t.length;l++){if(n=t[l].split(/\s+/),l==Math.ceil(.25*t.length)&&($("#spinnerVal").html("30%"),1===DEBUG&&console.log("30%")),l==Math.ceil(.5*t.length)&&($("#spinnerVal").html("35%"),1===DEBUG&&console.log("35%")),l==Math.ceil(.75*t.length)&&($("#spinnerVal").html("40%"),1===DEBUG&&console.log("40%")),"Linux"===n[0]?(r=n[3],s=""):"SunOS"!==n[0]&&"AIX"!==n[0]||(r=n[5],s=""),"AM"===n[1]||"PM"===n[1]){if(a.indexOf(n[2])>-1){s=n[2]+"-"+n[3]+",";var c=n.slice(2,n.length).join(",");-1===headers.indexOf(c)&&headers.push(c);continue}}else if(a.indexOf(n[1])>-1){s=n[1]+"-"+n[2]+",";var u=n.slice(1,n.length).join(",");-1===headers.indexOf(u)&&headers.push(u);continue}t[l]&&(t[l].startsWith("Linux")||t[l].startsWith("AIX")||t[l].startsWith("SunOS"))?i+=t[l].replace(/\s+AM/g,":AM").replace(/\s+PM/g,":PM").replace(/\s+/g,",")+"\n":t[l]&&!t[l].startsWith("Average")&&(i+=s+r+"|"+t[l].replace(/\s+AM/g,":AM").replace(/\s+PM/g,":PM").replace(/\s+/g,",")+"\n")}switch(1===DEBUG&&$(".contMBlock").html("<p style='font-family:Metrophobic;font-size:12px'>"+headers.join("<br />")+"</p>"),fileOut=i,updateProgress(45),getServerInfo(),$("#pageTitle").html(),$("#containerA").html(""),$("#containerB").html(""),$("#containerC").html(""),updateProgress(50),getOS()){case"LINUX":$("#peakBlock").addClass("add"),$("#btnCPU, #btnFile, #btnTTY, #btnMemAlloc, #btnSysCalls").hide("fast"),show("#nav-container, #btnSAR, #btnCPUs, #btnMem, #btnDevices, #btnProcesses, #btnSwap, #btnPaging, #btnPage, #btnIO, #btnLoad, #btnInterfaceTraffics, #btnInterfaceErrors, #btnNFS, #btnSockets, #btnReport, #btnContact"),updateProgress(60),getCPU2("all\t",2,"no","#peakCPU"),getGenericData("runq-sz-plist-sz",1,"no","#peakLoad"),getGenericData("kbmemfree-kbmemused",3,"no","#peakMemory"),getGenericData("kbswpfree-kbswpused",3,"no","#peakIO"),updateProgress(70),getDevices("DEV-tps","no",null),getInterfaceTraffic("IFACE-rxpck/s","no",null),getInterfaceErrors("IFACE-rxerr/s","no",null),printPieChart("peakCPUChart",parseInt($("#peakCPU").html()),"blue"),printPieChart("peakLoadChart",parseInt($("#peakLoad").html()),"green"),printPieChart("peakMemoryChart",parseInt($("#peakMemory").html()),"yellow"),updateProgress(80);break;case"AIX":$("#btnCPUs, #btnMemFree, #btnMemAlloc, #btnSwapUsg, #btnSwap, #btnPage, #btnInterfaceTraffics, #btnInterfaceErrors, #btnNFS, #btnSockets").hide("fast"),show("#nav-container, #btnSAR, #btnCPU, #btnMem, #btnDevices, #btnProcesses, #btnPaging, #btnIO, #btnLoad, #btnSysCalls, #btnFile, #btnTTY, #btnReport, #btnContact");break;case"SUNOS":$("#peakBlock").addClass("add"),$("#btnCPUs, #btnMemFree, #btnSwapUsg, #btnPage, #btnInterfaceTraffics, #btnInterfaceErrors, #btnNFS, #btnSockets").fadeOut("fast"),show("#nav-container, #btnSAR, #btnCPU, #btnMem, #btnMemAlloc, #btnDevices, #btnProcesses, #btnSwap, #btnPaging, #btnIO, #btnLoad, #btnSysCalls, #btnFile, #btnTTY, #btnReport, #btnContact"),$("#peakCPULabel").html("Peak CPU"),$("#peakLoadLabel").html("Peak Runq"),$("#peakMemoryLabel").html("Top FreeMem"),getGenericData("runq-sz-%runocc",1,"no","#peakLoad"),getGenericData("freemem-freeswap",1,"no","#peakMemory"),getGenericData("%usr-%sys",1,"no","#peakCPU"),printPieChart("peakCPUChart",parseInt($("#peakCPU").html()),"blue"),printPieChart("peakLoadChart",parseInt($("#peakLoad").html()),"green"),printPieChart("peakMemoryChart",parseInt($("#peakMemory").html()),"yellow")}$("#btnReset").click(function(){location.reload(!0)}),$("#btnDBGo").click(function(){$("#btnSAR").click()}),$("#btnCPUArrow").click(function(){$("#btnCPUs").click(),$("#nav ul#ulCPU>li:last-child>a").click()}),$("#btnLoadArrow").click(function(){$("#btnLoad").click()}),$("#btnMemoryArrow").click(function(){$("#btnMem").click(),$("#btnMemUsg").click()}),$("#btnIOArrow").click(function(){$("#btnIO").click()});var d=$("#containerA").width(),p=0;$("#sidebarCollapse").bind("click",function(){0==p&&(p=$("#containerA").width());var e=$("#containerA").highcharts(),t=$("#containerB").highcharts(),a=$("#containerC").highcharts(),n=$("#containerD").highcharts();d=(d=$("#containerA").width())<=p?d+150:p,$("#containerA").is(":visible")&&e.update({chart:{width:d}}),$("#containerB").is(":visible")&&t.update({chart:{width:d}}),$("#containerC").is(":visible")&&a.update({chart:{width:d}}),$("#containerD").is(":visible")&&n.update({chart:{width:d}}),$("#containerA").is(":visible")&&e.redraw(),$("#containerB").is(":visible")&&t.redraw(),$("#containerC").is(":visible")&&a.redraw(),$("#containerD").is(":visible")&&n.redraw(),p=$("#containerA").width()+10}),updateProgress(99),$("#sidebar").removeClass("active"),$(".contDash").show(),updateProgress(100),setTimeout(function(){progressBarReset()},1e3),$("#sidebar").show("fast"),$("#sidebarCollapse").show("fast")}function getAsText(e){var t;try{t=new FileReader}catch(e){return void(document.getElementById("fileErr").innerHTML="Error: seems File API is not supported on your browser")}t.readAsText(e,"UTF-8"),t.onload=loaded,t.onerror=errorHandler,$("#fileErr").html(""),$("#pageTitle").html(""),$("#containerA").html(""),$("#containerB").html(""),$("#containerC").html(""),$("#fileProgressBar").show(),1===DEBUG&&console.log("Start spinner from getAsText"),show("#spinner"),updateProgress(15)}function displayTitle(e){chartPage();var t=getHostname();$("#pageTitle").html(e+" for "+t),$("#pageName").html(t),$("#pageShortName").html(e)}function timeString2Float(e){var t=e.split(/[.:]/);return parseInt(t[0],10)+(t[1]?parseInt(t[1],10):0)/60}function float2timeString(e){var t=e%60;return Math.floor(e/60)+":"+t}function minTommss(e){var t=e<0?"-":"",a=Math.floor(Math.abs(e)),n=Math.floor(60*Math.abs(e)%60);return t+(a<10?"0":"")+a+":"+(n<10?"0":"")+n}function unique(e){return $.grep(e,function(t,a){return a==$.inArray(t,e)})}function naturalCompare(e,t){var a=[],n=[];for(e.replace(/(\d+)|(\D+)/g,function(e,t,n){a.push([t||1/0,n||""])}),t.replace(/(\d+)|(\D+)/g,function(e,t,a){n.push([t||1/0,a||""])});a.length&&n.length;){var r=a.shift(),s=n.shift(),o=r[0]-s[0]||r[1].localeCompare(s[1]);if(o)return o}return a.length-n.length}function ConvertTo24Hr(e){var t=e,a=Number(t.match(/^(\d+)/)[1]),n=Number(t.match(/:(\d+)/)[1]),r=Number(t.match(/:(\d+):(\d+)/)[2]),s=t.match(/:([^:]*)$/)[1];"PM"==s&&a<12&&(a+=12),"AM"==s&&12==a&&(a-=12);var o=a.toString(),i=n.toString();return a<10&&(o="0"+o),n<10&&(i="0"+i),r<10&&(r="0"+r),o+":"+i+":"+r}function getCPU(e,t,a,n){var r,s,o,l=fileOut.replace(/^\s*$(?:\r\n?|\n)/gm,"\n").replace(/user/g,"usr").split("\n"),c=[],u=[];(c=jQuery.grep(l,function(t){return"CPU-%usr"==t.split(",")[0]&&t.split(",")[2]==e})).sort(function(e,t){return r=e.split(",")[1].split("|"),s=t.split(",")[1].split("|"),Date.parse(r[0])-Date.parse(s[0])});for(var d=0;d<c.length;d++)u.push(c[d].split(",")[2]);(u=unique(u)).sort(naturalCompare);var p=[],h=[];for(d=0;d<c.length;d++){c[d]&&(o=(h=c[d].split(","))[1].split("|"));for(var g=0;g<u.length;g++)if(h[2]==u[g]){if("Avera"==o[1].substr(0,5))continue;if("00:00:01"==ConvertTo24Hr(o[1]))continue;var m=new Date(Date.parse(o[0]+" "+ConvertTo24Hr(o[1])));p.push([m.getTime(),parseFloat(h[t+1])])}}if("yes"==a){var f=$("<table border=1></table>"),b=$("<tr></tr>");for(i=0;i<p.length;i++)f.append(b.append($("<td></td>").html(p[i][0])));for(b=$("<tr></tr>"),i=0;i<p.length;i++)f.append(b.append($("<td></td>").html(p[i][1])));$(n).html(f)}return p}function getCPU2(e,t,a,n){var r,s,o,l,c=fileOut.replace(/^\s*$(?:\r\n?|\n)/gm,"\n").replace(/user/g,"usr").split("\n"),u=[],d=[],p=0;(u=jQuery.grep(c,function(e){return"CPU-%usr"==e.split(",")[0]})).sort(function(e,t){return s=e.split(",")[1].split("|"),o=t.split(",")[1].split("|"),Date.parse(s[0])-Date.parse(o[0])});for(var h=0;h<u.length;h++)d.push(u[h].split(",")[2]);(d=unique(d)).sort(naturalCompare);var g=[],m=[],f=[];for(h=0;h<u.length;h++){u[h]&&(l=(f=u[h].split(","))[1].split("|"));for(var b=0;b<d.length;b++){if(f[2]==d[b]){var w=ConvertTo24Hr(l[1]);if("Avera"==l[1].substr(0,5))continue;if("00:00:01"==w)continue;var k=new Date(Date.parse(l[0]+" "+w));0===b&&g.push(k.getTime()),m.push([k.getTime(),parseFloat(f[t+1])])}r=parseFloat(f[t+1])>parseFloat(p)?l[0]+" "+ConvertTo24Hr(l[1]):r,p=parseFloat(f[t+1])>parseFloat(p)?f[t+1]:p}}$(n).html(parseInt(p)),$(n+"Time").html(r),$("#ulCPU").empty();for(var C=0;C<d.length;C++)$("#ulCPU").append('<li><a href="#" data-sns="'+C+'"><i class="fa fa-microchip" style="color: #6A55C2" aria-hidden="true"><span class="icon-bg bg-violet"></span></i>'+d[C]+"</a></li>");if($("#cssmenu ul ul li:odd").addClass("odd"),$("#cssmenu ul ul li:even").addClass("even"),$("#ulCPU").on("click","a",function(e){chartPage(),e.preventDefault();var t=$(this).data("sns");getCPUchart(d[t])}),"yes"==a){var v=$("<table border=1></table>"),D=$("<tr></tr>");for(i=0;i<g.length;i++)v.append(D.append($("<td></td>").html(g[i])));for(D=$("<tr></tr>"),i=0;i<m.length;i++)v.append(D.append($("<td></td>").html(m[i][1])));$(n).html(v)}return m}function getInterrupts(e,t,a,n){var r,s,o,l,c=fileOut.replace(/^\s*$(?:\r\n?|\n)/gm,"\n").split("\n"),u=[],d=[],p=[];for((u=jQuery.grep(c,function(t){return t.split(",")[0]==e&&"sum"==t.split(",")[2]})).sort(function(e,t){return s=e.split(",")[1].split("|"),o=t.split(",")[1].split("|"),Date.parse(s[0])-Date.parse(o[0])}),r=0;r<u.length;r++)if(u[r]&&(l=(p=u[r].split(","))[1].split("|")),p[0]==e){var h=ConvertTo24Hr(l[1]);if("Avera"==l[1].substr(0,5))continue;if("00:00:01"==h)continue;var g=new Date(Date.parse(l[0]+" "+h));d.push([g.getTime(),parseFloat(p[t+1])])}if("yes"==a){var m=$("<table border=1></table>"),f=$("<tr></tr>");for(i=0;i<d.length;i++)m.append(f.append($("<td></td>").html(prettyTime(d[i][0]))));for(f=$("<tr></tr>"),i=0;i<d.length;i++)m.append(f.append($("<td></td>").html(d[i][1])));$(n).html(m)}return d}function getDevices(e,t,a){var n,r,s,o,i=fileOut.replace(/^\s*$(?:\r\n?|\n)/gm,"\n").split("\n"),l=[],c=[];(l=jQuery.grep(i,function(t){return t.split(",")[0]==e})).sort(function(e,t){return r=e.split(",")[1].split("|"),s=t.split(",")[1].split("|"),Date.parse(r[0])-Date.parse(s[0])});c=[];for(n=0;n<l.length;n++)c.push(l[n].split(",")[2]);(c=unique(c)).sort(naturalCompare);var u=[],d=[],p=[],h=[],g=[],m=[],f=[],b=[],w=[],k=[];$("#ulDev").empty();for(var C=0;C<c.length;C++)p.push([]),h.push([]),g.push([]),m.push([]),f.push([]),b.push([]),w.push([]),k.push([]),$("#ulDev").append('<li><a href="#" data-sns="'+C+'"><i class="fa fa-database" style="color: orange" aria-hidden="true"><span class="icon-bg bg-orange"></span></i>'+c[C]+"</a></li>");for($("#cssmenu ul ul li:odd").addClass("odd"),$("#cssmenu ul ul li:even").addClass("even"),n=0;n<l.length;n++){l[n]&&(o=(d=l[n].split(","))[1].split("|"));for(var v=0;v<c.length;v++)if(d[2]==c[v]){var D=ConvertTo24Hr(o[1]);if("Avera"==o[1].substr(0,5))continue;if("00:00:01"==D)continue;var y=new Date(Date.parse(o[0]+" "+D));0===v&&u.push(y.getTime()),p[v].push([y.getTime(),parseFloat(d[3])]),h[v].push([y.getTime(),parseFloat(d[4])]),g[v].push([y.getTime(),parseFloat(d[5])]),m[v].push([y.getTime(),parseFloat(d[6])]),f[v].push([y.getTime(),parseFloat(d[7])]),b[v].push([y.getTime(),parseFloat(d[8])]),w[v].push([y.getTime(),parseFloat(d[9])]),k[v].push([y.getTime(),parseFloat(d[10])])}}if($("#ulDev").on("click","a",function(e){chartPage(),e.preventDefault();var t=$(this).data("sns");$("#pageTitle").html("Block Transfer on "+c[t]+" for "+getHostname()),$("#containerATitle").html("Total number of transfers per second that were issued to physical devices"),$("#containerBTitle").html("Number of sectors read/written from/to the device"),showNotes("B","The size of a sector is 512 bytes"),$("#containerCTitle").html("Average size/queue length for I/O requests that were issued to the device"),$("#containerDTitle").html("Average time/service-time/utilization for I/O requests that were issued to the device"),showNotes("D","%util - Device saturation occurs when this value is close to 100%"),printMultiChart("containerA","Transfers per second to "+c[t],"tps/s",null,[{name:"tps/s",shadow:!0,data:p[t]}]),printMultiChart("containerB","Number of sectors read/written from/to to "+c[t],"rd_sec/wr_sec /s",null,[{name:"rd_sec /s",shadow:!0,data:h[t]},{name:"wr_sec /s",shadow:!0,data:g[t]}]),printMultiChart("containerC","Average size/queue length to "+c[t],"avgRq-sz/avrgqu-sz/await/svctm/%util",null,[{name:"The average size (in sectors) of the requests that were issued to the device (avrgrq-sz)",shadow:!0,data:m[t]},{name:"The average queue length of the requests that were issued to the device (avrgqu-sz)",shadow:!0,data:f[t]}]),printMultiChart("containerD","Average time/service time/utilization to "+c[t],"avgRq-sz/avrgqu-sz/await/svctm/%util",null,[{name:"The average time [in ms] for I/O requests issued to the device to be served (await)",shadow:!0,data:b[t]},{name:"The average service time [in ms] for I/O requests that were issued to the device (svctm)",shadow:!0,data:w[t]},{name:"Percentage of CPU time bandwidth utilization for the device (util %)",shadow:!0,data:k[t]}]),hideBlock("D")}),"yes"==t){for(var x=$("<table border=1></table>"),B=$("<tr></tr>"),G=0;G<u.length;G++)x.append(B.append($("<td></td>").html(u[G])));for(v=0;v<c.length;v++){B=$("<tr></tr>");for(G=0;G<h[v].length;G++)x.append(B.append($("<td></td>").html(h[v][G][1])))}$(a).html(x)}}function getInterfaceTraffic(e,t,a){var n,r,s,o=fileOut.replace(/^\s*$(?:\r\n?|\n)/gm,"\n").split("\n"),l=[],c=[];(l=jQuery.grep(o,function(t){return t.split(",")[0]==e})).sort(function(e,t){return n=e.split(",")[1].split("|"),r=t.split(",")[1].split("|"),Date.parse(n[0])-Date.parse(r[0])});for(var u=0;u<l.length;u++)c.push(l[u].split(",")[2]);(c=unique(c)).sort(naturalCompare);var d=[],p=[],h=[],g=[],m=[],f=[],b=[],w=[],k=[];$("#ulInterfaceTraffic").empty();for(var C=0;C<c.length;C++)h.push([]),g.push([]),m.push([]),f.push([]),b.push([]),w.push([]),k.push([]),$("#ulInterfaceTraffic").append('<li><a href="#" data-sns="'+C+'"><i class="fa fa-road" style="color: #337ab7"> <span class="icon-bg bg-dodger"></span></i>'+c[C]+"</a></li>");for($("#cssmenu ul ul li:odd").addClass("odd"),$("#cssmenu ul ul li:even").addClass("even"),u=0;u<l.length;u++){l[u]&&(s=(p=l[u].split(","))[1].split("|"));for(var v=0;v<c.length;v++)if(p[2]==c[v]){var D=ConvertTo24Hr(s[1]);if("Avera"==s[1].substr(0,5))continue;if("00:00:01"==D)continue;var y=new Date(Date.parse(s[0]+" "+D));0===v&&d.push(y.getTime()),h[v].push([y.getTime(),parseFloat(p[3])]),g[v].push([y.getTime(),parseFloat(p[4])]),m[v].push([y.getTime(),parseFloat(p[5])]),f[v].push([y.getTime(),parseFloat(p[6])]),b[v].push([y.getTime(),parseFloat(p[7])]),w[v].push([y.getTime(),parseFloat(p[8])]),k[v].push([y.getTime(),parseFloat(p[9])])}}if($("#ulInterfaceTraffic").on("click","a",function(e){chartPage(),e.preventDefault();var t=$(this).data("sns");printMultiChart("containerA","Total number of packets received/transmitted per second on "+c[t],"rxpck/s | txpck/s",null,[{name:"Total number of packets received per second (rxpck/s)",shadow:!0,data:h[t]},{name:"Total number of packets transmitted per second (txpck/s)",shadow:!0,data:g[t]}]),printMultiChart("containerB","Total number of kilobytes received/transmitted per second on "+c[t],"rxkB/s | txkB/s",null,[{name:"Total number of kilobytes received per second (rxkB/s)",shadow:!0,data:m[t]},{name:"Total number of kilobytes transmitted per second (txkB/s)",shadow:!0,data:f[t]}]),printMultiChart("containerC","Number of compressed/multicast packets received/transmitted per second on "+c[t],"rxcmp/s | txcmp/s | rxmcst/s",null,[{name:"Number of compressed packets received per second (rxcmp/s)",shadow:!0,data:b[t]},{name:"Number of compressed packets transmitted per second (txcmp/s)",shadow:!0,data:w[t]},{name:"Number of multicast packets received per second (rxmcst/s)",shadow:!0,data:k[t]}])}),"yes"==t){var x=$("<table border=1></table>"),B=$("<tr></tr>");for(i=0;i<d.length;i++)x.append(B.append($("<td></td>").html(d[i])));for(v=0;v<c.length;v++)for(B=$("<tr></tr>"),i=0;i<g[v].length;i++)x.append(B.append($("<td></td>").html(g[v][i][1])));$(a).html(x)}}function getInterfaceErrors(e,t,a){var n,r,s,o,l=fileOut.replace(/^\s*$(?:\r\n?|\n)/gm,"\n").split("\n"),c=[],u=[];for((c=jQuery.grep(l,function(t){return t.split(",")[0]==e})).sort(function(e,t){return r=e.split(",")[1].split("|"),s=t.split(",")[1].split("|"),Date.parse(r[0])-Date.parse(s[0])}),n=0;n<c.length;n++)u.push(c[n].split(",")[2]);(u=unique(u)).sort(naturalCompare);var d=[],p=[],h=[],g=[],m=[],f=[],b=[],w=[],k=[],C=[],v=[];$("#ulInterfaceErrors").empty();for(var D=0;D<u.length;D++)h.push([]),g.push([]),m.push([]),f.push([]),b.push([]),w.push([]),k.push([]),C.push([]),v.push([]),$("#ulInterfaceErrors").append('<li><a href="#" data-sns="'+D+'"><i class="fa fa-unlink" style="color: #c4183c" aria-hidden="true"><span class="icon-bg bg-red"></span></i> '+u[D]+"</a></li>");for($("#cssmenu ul ul li:odd").addClass("odd"),$("#cssmenu ul ul li:even").addClass("even"),n=0;n<c.length;n++){c[n]&&(o=(p=c[n].split(","))[1].split("|"));for(var y=0;y<u.length;y++)if(p[2]==u[y]){var x=ConvertTo24Hr(o[1]);if("Avera"==o[1].substr(0,5))continue;if("00:00:01"==x)continue;var B=new Date(Date.parse(o[0]+" "+x));0===y&&d.push(B.getTime()),h[y].push([B.getTime(),parseFloat(p[3])]),g[y].push([B.getTime(),parseFloat(p[4])]),m[y].push([B.getTime(),parseFloat(p[5])]),f[y].push([B.getTime(),parseFloat(p[6])]),b[y].push([B.getTime(),parseFloat(p[7])]),w[y].push([B.getTime(),parseFloat(p[8])]),k[y].push([B.getTime(),parseFloat(p[9])]),C[y].push([B.getTime(),parseFloat(p[10])]),v[y].push([B.getTime(),parseFloat(p[11])])}}if($("#ulInterfaceErrors").on("click","a",function(e){chartPage(),e.preventDefault();var t=$(this).data("sns");printMultiChart("containerA","Total number of bad packets received per second on "+u[t],"rxerr/s | txerr/s | coll/s",null,[{name:"Total number of bad packets received per second (rxerr/s)",shadow:!0,data:h[t]},{name:"Total number of errors that happened per second while transmitting packets (txerr/s)",shadow:!0,data:g[t]},{name:"Number of collisions that happened per second while transmitting packets (coll/s)",shadow:!0,data:m[t]}]),printMultiChart("containerB","Number of received/transmitted packets dropped per second from linux buffers on "+u[t],"rxdrop/s | txdrop/s | txcarr/s",null,[{name:"Number of received packets dropped per second because of a lack of space in linux buffers (rxdrop/s)",shadow:!0,data:f[t]},{name:"Number of transmitted packets dropped per second because of a lack of space in linux buffers (txdrop/s)",shadow:!0,data:b[t]},{name:"Number of carrier-errors that happened per second while transmitting packets (txcarr/s)",shadow:!0,data:w[t]}]),printMultiChart("containerC","Number of [frame alignment/FIFO overrun] errors per second on received packets on "+u[t],"rxfram/s | rxfifo/s | txfifo/s",null,[{name:"Number of frame alignment errors that happened per second on received packets (rxfram/s)",shadow:!0,data:k[t]},{name:"Number of FIFO overrun errors that happened per second on received packets (rxfifo/s)",shadow:!0,data:C[t]},{name:"Number of FIFO overrun errors that happened per second on transmitted packets (txfifo/s)",shadow:!0,data:v[t]}])}),"yes"==t){var G=$("<table border=1></table>"),O=$("<tr></tr>");for(i=0;i<d.length;i++)G.append(O.append($("<td></td>").html(d[i])));for(y=0;y<u.length;y++)for(O=$("<tr></tr>"),i=0;i<b[y].length;i++)G.append(O.append($("<td></td>").html(b[y][i][1])));$(a).html(G)}}function getGenericData(e,t,a,n){var r,s,o,l=fileOut.replace(/^\s*$(?:\r\n?|\n)/gm,"\n").split("\n"),c=[],u=[],d=[],p=0,h=0,g=Math.pow(10,1e3),m=g,f=g;(c=jQuery.grep(l,function(t){return t.split(",")[0]==e})).sort(function(e,t){return r=e.split(",")[1].split("|"),s=t.split(",")[1].split("|"),Date.parse(r[0])-Date.parse(s[0])});for(var b=0;b<c.length;b++)if(c[b]&&(o=(d=c[b].split(","))[1].split("|")),d[0]==e){var w=ConvertTo24Hr(o[1]);if("Avera"==o[1].substr(0,5))continue;if("00:00:01"==w||"00:00:00"==w)continue;var k=new Date(Date.parse(o[0]+" "+w));u.push([k.getTime(),parseFloat(d[t+1])]),h=parseFloat(d[t+1])>parseFloat(p)?o[0]+" "+w:h,p=parseFloat(d[t+1])>parseFloat(p)?d[t+1]:p,f=parseFloat(d[t+1])<parseFloat(m)?o[0]+" "+w:f,m=parseFloat(d[t+1])<parseFloat(m)?d[t+1]:m}if("SUNOS"==getOS()&&"#peakMemory"==n?($(n).html(parseInt(m)),$(n+"Time").html(f)):($(n).html(parseInt(p)),$(n+"Time").html(h)),"yes"==a){var C=$("<table border=1></table>"),v=$("<tr></tr>");for(i=0;i<u.length;i++)C.append(v.append($("<td></td>").html(prettyTime(u[i][0]))));for(v=$("<tr></tr>"),i=0;i<u.length;i++)C.append(v.append($("<td></td>").html(u[i][1])));$(n).html(C)}return u}function getMemoryFreeData(e,t,a,n){var r,s,o,l=fileOut.replace(/^\s*$(?:\r\n?|\n)/gm,"\n").split("\n"),c=[],u=[],d=[];(c=jQuery.grep(l,function(t){return t.split(",")[0]==e})).sort(function(e,t){return r=e.split(",")[1].split("|"),s=t.split(",")[1].split("|"),Date.parse(r[0])-Date.parse(s[0])});for(var p=0;p<c.length;p++)if(c[p]&&(o=(d=c[p].split(","))[1].split("|")),d[0]==e){var h=ConvertTo24Hr(o[1]);if("Avera"==o[1].substr(0,5))continue;if("00:00:01"==h)continue;var g=new Date(Date.parse(o[0]+" "+h));u.push([g.getTime(),parseFloat(d[t+1])+parseFloat(d[t+4])+parseFloat(d[t+5])])}if("yes"==a){var m=$("<table border=1></table>"),f=$("<tr></tr>");for(i=0;i<u.length;i++)m.append(f.append($("<td></td>").html(prettyTime(u[i][0]))));for(f=$("<tr></tr>"),i=0;i<u.length;i++)m.append(f.append($("<td></td>").html(u[i][1])));$(n).html(m)}return u}myDate=new Date,$(".tdate").html(("0"+myDate.getDate()).slice(-2)),$(".tyear").html(myDate.getFullYear()),Highcharts.wrap(Highcharts.Chart.prototype,"getContainer",function(e){e.call(this),this.container.style.background="white"}),Highcharts.theme={colors:["#f45b5b","#8085e9","#8d4654","#527bad","#aaeeee","#ff0066","#eeaaee","#55BF3B","#DF5353","#0099ff","#aaeeee"],chart:{backgroundColor:null,style:{fontFamily:"Metrophobic, Armata, Signika, arial, sans-serif"}},title:{useHTML:!0,style:{color:"black",fontSize:"14px",fontWeight:"bold"}},subtitle:{style:{color:"grey",fontSize:"10px",fontWeight:"italic"}},tooltip:{borderWidth:0},legend:{itemStyle:{fontWeight:"bold",fontSize:"10px"}},xAxis:{labels:{style:{color:"#6e6e70"}}},yAxis:{labels:{style:{color:"#6e6e70"}}},plotOptions:{series:{shadow:!0},candlestick:{lineColor:"#404048"},map:{shadow:!1}},navigator:{xAxis:{gridLineColor:"#D0D0D8"}},rangeSelector:{buttonTheme:{fill:"white",stroke:"#C0C0C8","stroke-width":1,states:{select:{fill:"#D0D0D8"}}}},scrollbar:{trackBorderColor:"#C0C0C8"},background2:"#E0E0E8"},Highcharts.setOptions(Highcharts.theme);var grassGreen="#55BF3B",bluishPurple="#527bad",darkBrown="#8d4654",darkPink="#ff0066",crimsonRed="#f45b5b",bluishTeal="#166c7d",lightPurple="#8085e9",lightPink="#eeaaee",tomatoRed="#DF5353",dodgerBlue="#0099ff",lightBurgundy="#cc6699";function getChart(e,t,a,n,r,s){function o(e){return function(e){var t=e.getMonth()+1,a=e.getDate(),n=e.getHours(),r=e.getMinutes();t=t<10?"0"+t:t,a=a<10?"0"+a:a;var s=n>=12?"pm":"am",o=(n=(n%=12)?n:12)+":"+(r=r<10?"0"+r:r)+" "+s;return e.getFullYear()+""+t+a+"<br>"+o}(new Date(e))}return JSON.stringify({chart:{borderColor:"#e0e0e0",borderWidth:0,type:"line",marginRight:20,height:200},title:{text:null,x:-20},subtitle:{text:"<b>"+a+" for "+getHostname()+"</b>",x:-20},credits:{enabled:!1},xAxis:{min:0,tickInterval:1,gridLineWidth:.5,type:"datetime",overflow:"justify",labels:{formatter:function(){return o(this.value)}}},yAxis:{title:{text:a},min:e,max:t,tickInterval:n},tooltip:{formatter:function(){return o(this.x)+", "+this.y}},legend:{enabled:!1},plotOptions:{line:{lineWidth:1,marker:{enabled:!1},states:{hover:{lineWidth:1}}}},series:[{name:a,color:r,data:s,shadow:!0}],exporting:{enabled:!1}})}function printChart(e,t,a,n,r,s,o){var i=getHostname(),l=n.split("(")[0],c=new Highcharts.Chart({chart:{borderColor:"#e0e0e0",borderWidth:0,type:"line",marginRight:20,zoomType:"xy",renderTo:e,backgroundColor:null},title:{text:l,useHTML:!0,style:{color:"#fff",fontSize:"1.1em",fontWeight:"normal",backgroundColor:s,boxShadow:"inset 9px 9px 14px -2px rgba(0,0,0,0.35)",textShadow:"#474747 3px 3px 2px",padding:"5px 10px",borderRadius:"20px"}},credits:{enabled:!1},subtitle:{text:i,x:0,useHTML:!0,style:{color:s,fontSize:".7em"}},xAxis:{gridLineWidth:.5,type:"datetime",overflow:"justify",crosshair:!0,labels:{formatter:function(){return prettyTime(this.value)}}},yAxis:{title:{text:n},min:t,max:a,gridLineWidth:.5,tickInterval:r,crosshair:!0},tooltip:{formatter:function(){return prettyTime(this.x)+", "+this.y},useHTML:!0},legend:{enabled:!1},plotOptions:{area:{fillColor:{linearGradient:{x1:0,y1:0,x2:0,y2:1},stops:[[0,Highcharts.getOptions().colors[0]],[1,Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get("rgba")]]},marker:{radius:1},lineWidth:1,states:{hover:{lineWidth:1}},threshold:null}},series:[{name:n,color:s,data:o,shadow:!0}],exporting:{allowHTML:!0,sourceWidth:1400,scale:1,chartOptions:{chart:{width:document.getElementById(e).clientWidth,height:document.getElementById(e).clientHeight},plotOptions:{series:{dataLabels:{enabled:!1}}}},buttons:{contextButton:{menuItems:[{textKey:"printChart",onclick:function(){var e=this.options.subtitle.text;this.setTitle(null,{text:" "}),this.print(),this.setTitle(null,{text:e})}},{textKey:"fullscreenchange",text:"View Fullscreen",onclick:function(){this.backgroundColor="white",Highcharts.FullScreen=function(e){this.init(e.parentNode)},Highcharts.FullScreen.prototype={init:function(e){e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen&&e.msRequestFullscreen()}},c.fullscreen=new Highcharts.FullScreen(c.container)}},{separator:!0},{textKey:"downloadPNG",onclick:function(){this.exportChart({type:"image/png"},{subtitle:{text:i}})}},{textKey:"downloadJPEG",onclick:function(){this.exportChart({type:"image/jpeg"},{subtitle:{text:i}})}},{textKey:"downloadPDF",onclick:function(){this.exportChart({type:"application/pdf"},{subtitle:{text:i}})}},{textKey:"downloadSVG",onclick:function(){this.exportChart({type:"image/svg+xml"},{subtitle:{text:i}})}}]}}}})}function chartFullScreen(e){Highcharts.FullScreen=function(e){this.init(e.parentNode)},Highcharts.FullScreen.prototype={init:function(e){e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen&&e.msRequestFullscreen()}},chart.fullscreen=new Highcharts.FullScreen(chart.container)}function printMultiChart(e,t,a,n,r){var s=getHostname(),o=[grassGreen,bluishPurple,darkBrown,crimsonRed,tomatoRed,lightBurgundy,lightPink,lightPurple],i=o[Math.floor(Math.random()*o.length)];new Highcharts.Chart({chart:{borderColor:"#e0e0e0",borderWidth:0,type:"line",zoomType:"x",marginRight:20,marginBottom:70,renderTo:e},title:{text:t,useHTML:!0,style:{color:"#fff",fontSize:"1.1em",fontWeight:"normal",backgroundColor:i,boxShadow:"inset 9px 9px 14px -2px rgba(0,0,0,0.35)",textShadow:"none",padding:"5px 10px",borderRadius:"20px"}},subtitle:{text:s,x:0,useHTML:!0,style:{color:i,fontSize:".7em"}},credits:{enabled:!1},xAxis:{gridLineWidth:.5,type:"datetime",overflow:"justify",crosshair:!0,labels:{formatter:function(){return prettyTime(this.value)}}},yAxis:{min:0,title:{text:a},gridLineWidth:.5,tickInterval:n},legend:{layout:"horizontal",x:0,y:15},plotOptions:{line:{lineWidth:1,marker:{enabled:!1},states:{hover:{lineWidth:1}}}},series:r,exporting:{allowHTML:!0,sourceWidth:1400,scale:1,chartOptions:{chart:{width:document.getElementById(e).clientWidth,height:document.getElementById(e).clientHeight},plotOptions:{series:{dataLabels:{enabled:!1}}}},buttons:{contextButton:{menuItems:[{textKey:"printChart",onclick:function(){var e=this.options.subtitle.text;this.setTitle(null,{text:" "}),this.print(),this.setTitle(null,{text:e})}},{textKey:"fullscreenchange",text:"View Fullscreen",onclick:function(){this.backgroundColor="white",Highcharts.FullScreen=function(e){this.init(e.parentNode)},Highcharts.FullScreen.prototype={init:function(e){e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen&&e.msRequestFullscreen()}},chart.fullscreen=new Highcharts.FullScreen(chart.container)}},{separator:!0},{textKey:"downloadPNG",onclick:function(){this.exportChart({type:"image/png"},{subtitle:{text:s}})}},{textKey:"downloadJPEG",onclick:function(){this.exportChart({type:"image/jpeg"},{subtitle:{text:s}})}},{textKey:"downloadPDF",onclick:function(){this.exportChart({type:"application/pdf"},{subtitle:{text:s}})}},{textKey:"downloadSVG",onclick:function(){this.exportChart({type:"image/svg+xml"},{subtitle:{text:s}})}}]}}}})}function printPieChart(e,t,a){new Highcharts.Chart({chart:{renderTo:e,type:"pie",margin:[0,0,0,0],spacingTop:0,spacingBottom:0,spacingLeft:0,spacingRight:0,plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1},title:null,tooltip:!1,credits:!1,plotOptions:{pie:{shadow:!1,center:["50%","50%"],borderWidth:.5,borderColor:null,colors:["#fff","#DDDF00","#ED561B","#50B432","#24CBE5","#64E572","#FF9655","#FFF263","#6AF9C4"]},series:{states:{hover:{enabled:!1,halo:{size:0}}}}},exporting:!1,series:[{name:"",color:"black",data:[["value",t],{y:100-t,color:"rgba(0,0,0,0.1)"}],size:"100%",shadowColor:"teal",innerSize:"60%",showInLegend:!1,dataLabels:{enabled:!1}}]})}function getCPUchart(e){switch(displayTitle("CPU-"+e),getOS()){case"LINUX":printChart("containerA",0,null,"Percentage of CPU-"+e+" utilization at the user level [application] (%usr)",10,lightBurgundy,getCPU(e,2,"no",null)),printChart("containerB",0,null,"Percentage of CPU-"+e+" utilization at the user level with nice priority (%nice)",null,bluishPurple,getCPU(e,3,"no",null)),printChart("containerC",0,100,"Percentage of time that the CPU-"+e+" were idle with outstanding disk I/O request (%iowait)",10,tomatoRed,getCPU(e,5,"no",null));break;case"AIX":case"SUNOS":printChart("containerA",0,null,"CPU Info",10,"#166c7d",getGenericData("%usr-%sys","Average,",1,"no",null)),hideBlock("B"),hideBlock("C")}hideBlock("D")}$("#btnSAR").click(function(){homePage(),getServerInfo(),$("#pageTitle").html(""),$("#containerA").html(""),$("#containerB").html(""),$("#containerC").html(""),$("#containerD").html(""),$("#btnSave").hide()}),$("#btnCPU").click(function(){switch(displayTitle("CPU"),getOS()){case"LINUX":break;case"AIX":var e=grepHeaders("%usr");if(-1!=e){var t=e.split(","),a=[...t],n=t.indexOf("%usr")+1,r=t.indexOf("%sys")+1,s=t.indexOf("%wio")+1,o=t.indexOf("%idle")+1,i=t.indexOf("physc")+1,l=t.indexOf("%entc")+1,c=a.splice(0,2).join("-");1==DEBUG&&console.log(t+" | "+c+" | "+n+" | "+r+" | "+s+" | "+o+" | "+i+" | "+l),printMultiChart("containerA","Percentage of time the processor(s) spent in execution at the user/system","%usr | %system",1e3,[{name:"Percentage of time the processor's spent in execution at the user (%usr)",shadow:!0,data:getGenericData(c,n,"no",null)},{name:"Percentage of time the processor's spent in execution at the system (%system)",shadow:!0,data:getGenericData(c,r,"no",null)}]),printMultiChart("containerB","Percentage of time the processor(s) were idle","%wio | %idle",1e3,[{name:"Percentage of time the processor(s) were idle with outstanding disk/NFS I/O requests (%wio)",shadow:!0,data:getGenericData(c,n,"no",null)},{name:"Percentage of time the processor(s) were idle with no outstanding disk/NFS I/O requests (%idle)",shadow:!0,data:getGenericData(c,r,"no",null)}]),printChart("containerC",0,null,"Number of physical processors consumed",10,"#166c7d",getGenericData(c,i,"no",null)),showNotes("C","physc - Reports the number of physical processors consumed. This data will be reported if the partition is dedicated and enabled for donation, or is running with shared processors or simultaneous multithreading enabled."),printChart("containerD",0,null,"Percentage of entitled capacity consumed",10,"#166c7d",getGenericData(c,l,"no",null)),showNotes("D","%entc - Reports the percentage of entitled capacity consumed. This will be reported only if the partition is running with shared processors. Because the time base over which this data is computed can vary, the entitled capacity percentage can sometimes exceed 100%. This excess is noticeable only with small sampling intervals.")}else showBlock("M"),showNotes("M","No data found");break;case"SUNOS":printChart("containerA",0,null,"User (%usr)",10,"#166c7d",getGenericData("%usr-%sys",1,"no",null)),printChart("containerB",0,null,"System (%sys)",10,bluishPurple,getGenericData("%usr-%sys",2,"no",null)),printChart("containerC",0,null,"Waiting IO (%wio)",10,"#55BF3B",getGenericData("%usr-%sys",3,"no",null)),printChart("containerD",0,null,"Idle (%idle)",10,"#2b908f",getGenericData("%usr-%sys",4,"no",null))}}),$("#btnProcs").click(function(){switch(displayTitle("Processes"),getOS()){case"LINUX":if(-1!=(i=grepHeaders("proc/s"))){var e=i.split(","),t=[...e],a=e.indexOf("proc/s")+1,n=e.indexOf("cswch/s")+1,r=t.splice(0,2).join("-");1==DEBUG&&console.log(e+" -- "+r+" -- "+a+" -- "+n),printChart("containerA",0,null,"Total number of tasks created per second (proc/s)",10,darkBrown,getGenericData(r,a,"no",null)),printChart("containerB",0,null,"Total number of context switches per second (cswch/s)",100,bluishPurple,getGenericData(r,n,"no",null)),hideBlock("D")}else showBlock("M"),showNotes("M","No data found");if(-1!=(i=grepHeaders("INTR"))){e=i.split(","),t=[...e];var s=e.indexOf("INTR")+1,o=e.indexOf("intr/s")+1;r=t.splice(0,2).join("-");1==DEBUG&&console.log(e+" -- "+r+" -- "+s+" -- "+o),printChart("containerC",0,null,"Total number of interrupts received per second (intr/s)",100,grassGreen,getInterrupts(r,o,"no",null))}else hideBlock("C");break;case"AIX":var i;if(-1!=(i=grepHeaders("proc-sz"))){e=i.split(","),t=[...e],a=e.indexOf("proc-sz")+1;var l=e.indexOf("inod-sz")+1,c=e.indexOf("file-sz")+1,u=e.indexOf("thrd-sz")+1;r=t.splice(0,2).join("-");1==DEBUG&&console.log(e+" | "+r+" | "+a+" | "+l+" | "+c+" | "+u),printChart("containerA",0,null,"Process table status (proc-sz)",10,darkBrown,getGenericData(r,a,"no",null)),printChart("containerB",0,null,"I-node table status (inod-sz)",100,bluishPurple,getGenericData(r,l,"no",null)),printChart("containerB",0,null,"File table status (file-sz)",100,lightBurgundy,getGenericData(r,c,"no",null)),printChart("containerB",0,null,"Kernel-thread table status (thrd-sz)",100,grassGreen,getGenericData(r,u,"no",null))}else showBlock("M"),showNotes("M","No data found");break;case"SUNOS":printChart("containerA",0,null,"Processes (proc-sz)",10,darkPink,getGenericData("proc-sz-ov",1,"no",null)),printChart("containerB",0,null,"Inodes (inod-sz)",10,grassGreen,getGenericData("proc-sz-ov",3,"no",null)),printChart("containerC",0,null,"Files (file-sz)",10,bluishPurple,getGenericData("proc-sz-ov",5,"no",null)),printChart("containerD",0,null,"Locks (lock-sz)",10,tomatoRed,getGenericData("proc-sz-ov",7,"no",null))}}),$("#btnSwap").click(function(){switch(displayTitle("Swapping"),getOS()){case"LINUX":var e=grepHeaders("pswpin/s");if(-1!=e){var t=e.split(","),a=[...t],n=t.indexOf("pswpin/s")+1,r=t.indexOf("pswpout/s")+1,s=a.splice(0,2).join("-");1==DEBUG&&console.log(t+" -- "+s+" -- "+n+" -- "+r),printChart("containerA",0,null,"Total number of swap pages the system brought in per second (pswpin/s)",null,grassGreen,getGenericData(s,n,"no",null)),printChart("containerB",0,null,"Total number of swap pages the system brought out per second (pswpout/s)",null,bluishPurple,getGenericData(s,r,"no",null)),hideBlock("C"),hideBlock("D")}else showBlock("M"),showNotes("M","No data found");break;case"AIX":break;case"SUNOS":printChart("containerA",0,null,"Swap Page IN (swpin/s)",null,grassGreen,getGenericData("swpin/s-bswin/s",1,"no",null)),printChart("containerB",0,null,"Swap Page OUT (swpot/s)",null,bluishPurple,getGenericData("swpin/s-bswin/s",3,"no",null)),printChart("containerC",0,null,"Process Switches (pswch/s)",10,bluishTeal,getGenericData("swpin/s-bswin/s",5,"no",null)),hideBlock("D")}}),$("#btnPaging").click(function(){switch(displayTitle("System Paging"),getOS()){case"LINUX":printMultiChart("containerA","Number of system pages on disk","pgpgin/s,pgpgout/s",1e3,[{name:"System Paged in from disk (pgpgin/s)",shadow:!0,data:getGenericData("pgpgin/s-pgpgout/s",1,"no",null)},{name:"System Paged out to disk (pgpgout/s)",shadow:!0,data:getGenericData("pgpgin/s-pgpgout/s",2,"no",null)}]),printMultiChart("containerB","Number of system page faults","fault/s,majflt/s",1e3,[{name:"Number of page faults [major + minor] (fault/s)",shadow:!0,data:getGenericData("pgpgin/s-pgpgout/s",3,"no",null)},{name:"Number of major faults (majflt/s)",shadow:!0,data:getGenericData("pgpgin/s-pgpgout/s",4,"no",null)}]),printMultiChart("containerC","Number of system pages on free list","pgfree/s,pgscank/s,pgscand/s,pgsteal/s",1e3,[{name:"Number of pages placed on the free list by the system (pgfree/s)",shadow:!0,data:getGenericData("pgpgin/s-pgpgout/s",5,"no",null)},{name:"Number of pages scanned by the kswapd daemon (pgscank/s)",shadow:!0,data:getGenericData("pgpgin/s-pgpgout/s",6,"no",null)},{name:"Number of pages scanned directly (pgscand/s)",shadow:!0,data:getGenericData("pgpgin/s-pgpgout/s",7,"no",null)},{name:"Number of pages the system has reclaimed from [page & swap] cache (pgsteal/s)",shadow:!0,data:getGenericData("pgpgin/s-pgpgout/s",8,"no",null)}]),printChart("containerD",0,100,"Metric of efficiency of page reclaim (%vmeff)",null,bluishPurple,getGenericData("pgpgin/s-pgpgout/s",9,"no",null)),showNotes("D","%vmeff - Calculated as pgsteal / pgscan, this is a metric of the efficiency of page reclaim. If it is near 100% then almost every page coming off the tail of the inactive list is being reaped. If it gets too low (e.g. less than 30%) then the virtual memory is having some difficulty. This field is displayed as zero if no pages have been scanned during the interval of time.");break;case"AIX":var e=grepHeaders("slots");if(-1!=e){var t=e.split(","),a=[...t].splice(0,2).join("-"),n=t.indexOf("slots")+1,r=t.indexOf("cycle/s")+1,s=t.indexOf("fault/s")+1,o=t.indexOf("odio/s")+1;1==DEBUG&&console.log(t+" | "+a+" | slots:"+n+" | cycle/s:"+r+" | fault/s:"+s+" | odioIndex:"+o),printChart("containerA",0,null,"Number of page replacement cycles per second (slots/s)",null,dodgerBlue,getGenericData(a,n,"no",null)),printChart("containerB",0,null,"Number of page replacement cycles per second (cycle/s)",null,bluishPurple,getGenericData(a,r,"no",null)),printChart("containerC",0,null,"Number of page faults per second (fault/s)",null,lightBurgundy,getGenericData(a,s,"no",null)),printChart("containerD",0,null,"Number of non paging disk I/Os per second (odio/s)",null,darkBrown,getGenericData(a,o,"no",null))}else showBlock("M"),showNotes("M","No data found");break;case"SUNOS":printMultiChart("containerA","Page In","pgin/s,ppgin/s,atch/s",null,[{name:"Page-in requests (pgin/s)",shadow:!0,data:getGenericData("atch/s-pgin/s",2,"no",null)},{name:"Pages paged-in (ppgin/s)",shadow:!0,data:getGenericData("atch/s-pgin/s",3,"no",null)},{name:"Page Faults (pflt/s)",shadow:!0,data:getGenericData("atch/s-pgin/s",4,"no",null)},{name:"Valid Page Faults (vflt/s)",shadow:!0,data:getGenericData("atch/s-pgin/s",5,"no",null)},{name:"Page attaches (atch/s)",shadow:!0,data:getGenericData("atch/s-pgin/s",1,"no",null)}]),printMultiChart("containerB","Page Out","pgout/s,ppgin/s",null,[{name:"Page-out requests (pgout/s)",shadow:!0,data:getGenericData("pgout/s-ppgout/s",1,"no",null)},{name:"Pages paged-out (ppgout/s)",shadow:!0,data:getGenericData("pgout/s-ppgout/s",3,"no",null)},{name:"Pages Free (pgfree/s)",shadow:!0,data:getGenericData("pgout/s-ppgout/s",3,"no",null)},{name:"Pages scanned (pgscan/s)",shadow:!0,data:getGenericData("pgout/s-ppgout/s",4,"no",null)}]),printMultiChart("containerC","Paging","pgfree/s,pgscan/s,slock/s,%ufs_ipf",null,[{name:"Software Locks (slock/s)",shadow:!0,data:getGenericData("atch/s-pgin/s",6,"no",null)},{name:"UFS Inodes used (%ufs_ipf)",shadow:!0,data:getGenericData("pgout/s-ppgout/s",5,"no",null)}]),hideBlock("D")}}),$("#btnFile").click(function(){switch(displayTitle("File"),getOS()){case"LINUX":break;case"AIX":if(-1!=(r=grepHeaders("iget/s"))){var e=(s=r.split(",")).indexOf("iget/s")+1,t=s.indexOf("lookuppn/s")+1,a=s.indexOf("dirblk/s")+1,n=[...s].splice(0,2).join("-");1==DEBUG&&console.log(s+" | "+n+" | iget/s:"+e+" | lookuppn/s:"+t+" | dirblk/s:"+a),printChart("containerA",0,null,"Calls to any of several i-node lookup routines (iget/s)",null,tomatoRed,getGenericData(n,1,"no",null)),showNotes("A","iget/s - Calls to any of several i-node lookup routines that support multiple file system types. The iget routines return a pointer to the i-node structure of a file or device."),printChart("containerB",0,null,"Calls to the directory search routine (lookuppn/s)",null,bluishPurple,getGenericData(n,2,"no",null)),showNotes("B","lookuppn/s - Calls to the directory search routine that finds the address of a v-node given a path name"),printChart("containerC",0,null,"Number of 512-byte blocks read by the directory search routine (dirbk/s)",null,dodgerBlue,getGenericData(n,3,"no",null)),showNotes("C","dirbk/s - Number of 512-byte blocks read by the directory search routine to locate a directory entry for a specific file"),hideBlock("D")}else showBlock("M"),showNotes("M","No data found");break;case"SUNOS":var r;if(-1!=(r=grepHeaders("iget/s"))){e=(s=r.split(",")).indexOf("iget/s")+1;var s,o=s.indexOf("namei/s")+1;a=s.indexOf("dirblk/s")+1,n=[...s].splice(0,2).join("-");1==DEBUG&&console.log(s+" | "+n+" | iget/s:"+e+" | namei/s:"+o+" | dirblk/s:"+a),printChart("containerA",0,null,"Calls to any of several i-node lookup routines (iget/s)",null,tomatoRed,getGenericData(n,e,"no",null)),showNotes("A","iget/s - Calls to any of several i-node lookup routines that support multiple file system types. The iget routines return a pointer to the i-node structure of a file or device."),printChart("containerB",0,null,"Calls to the directory search routine (namei/s)",null,bluishPurple,getGenericData(n,o,"no",null)),showNotes("B","lookuppn/s - Calls to the directory search routine that finds the address of a v-node given a path name"),printChart("containerC",0,null,"Number of 512-byte blocks read by the directory search routine (dirbk/s)",null,dodgerBlue,getGenericData(n,a,"no",null)),showNotes("C","dirbk/s - Number of 512-byte blocks read by the directory search routine to locate a directory entry for a specific file"),hideBlock("D")}else showBlock("M"),showNotes("M","No data found")}}),$("#btnTTY").click(function(){switch(displayTitle("tty"),getOS()){case"LINUX":break;case"AIX":case"SUNOS":var e=grepHeaders("rawch/s");if(-1!=e){var t=e.split(","),a=t.indexOf("rawch/s")+1,n=t.indexOf("canch/s")+1,r=t.indexOf("outch/s")+1,s=t.indexOf("rcvin/s")+1,o=t.indexOf("xmtin/s")+1,i=t.indexOf("mdmin/s")+1,l=[...t].splice(0,2).join("-");1==DEBUG&&console.log(t+" | "+l+" | rawch/s:"+a+" | canch/s:"+n+" | outch/s:"+r+" | rcvin/s:"+s+" | xmtin/s:"+o+" | mdmin/s:"+i),printMultiChart("containerA","tty Character Rate","rawch/s | canch/s | outch/s",null,[{name:"Input Character rate (rawch/s)",shadow:!0,data:getGenericData(l,a,"no",null)},{name:"Canonical character rate (canch/s)",shadow:!0,data:getGenericData(l,n,"no",null)},{name:"Output character rate (outch/s)",shadow:!0,data:getGenericData(l,r,"no",null)}]),printMultiChart("containerB","tty Interrupt Rate","rcvin/s | xmtin/s | mdmin/s",null,[{name:"Receive Interrupt rate (rcvin/s) ",shadow:!0,data:getGenericData(l,s,"no",null)},{name:"Transmit Interrupt rate (xmtin/s)",shadow:!0,data:getGenericData(l,o,"no",null)},{name:"Modem Interrupt rate (mdmin/s)",shadow:!0,data:getGenericData(l,i,"no",null)}]),hideBlock("C"),hideBlock("D")}else showBlock("M"),showNotes("M","No data found")}}),$("#btnIO").click(function(){switch(displayTitle("IO"),getOS()){case"LINUX":if(-1!=(l=grepHeaders("tps"))){var e=l.split(","),t=[...e],a=e.indexOf("tps")+1,n=e.indexOf("rtps")+1,r=e.indexOf("wtps")+1,s=e.indexOf("bread/s")+1,o=e.indexOf("bwrtn/s")+1,i=t.splice(0,2).join("-");1==DEBUG&&console.log(e+" | "+i+" | tps:"+a+" | rtps:"+n+" | wtps:"+r+" | bread/s:"+s+" | bwrtn/s:"+o),printChart("containerA",0,null,"Total number of transfers per second that were issued to physical devices (tps)",100,"#166c7d",getGenericData("tps-rtps",1,"no",null)),printMultiChart("containerB","Total amount of data read/write from/to the devices in blocks per second","bread/s | bwrtn/s",1e3,[{name:"Total amount of data read from the devices in blocks per second (bread/s)",shadow:!0,data:getGenericData("tps-rtps",4,"no",null)},{name:"Total amount of data written to the devices in blocks per second (bwrtn/s)",shadow:!0,data:getGenericData("tps-rtps",5,"no",null)}]),showNotes("B","bread/s - Blocks are equivalent to sectors with 2.4 kernels and newer and therefore have a size of 512 bytes. With older kernels, a block is of indeterminate size"),printMultiChart("containerC","Total number of read/write requests per second issued to physical devices","rtps/wtps",100,[{name:"Total number of read requests per second (rtps)",shadow:!0,data:getGenericData("tps-rtps",2,"no",null)},{name:"Total number of write requests per second (wtps)",shadow:!0,data:getGenericData("tps-rtps",3,"no",null)}]),hideBlock("D")}else showBlock("M"),showNotes("M","No data found");break;case"AIX":var l;if(-1!=(l=grepHeaders("bread/s"))){e=l.split(","),t=[...e],s=e.indexOf("bread/s")+1;var c=e.indexOf("bwrit/s")+1,u=e.indexOf("lread/s")+1,d=e.indexOf("lwrit/s")+1,p=e.indexOf("%rcache")+1,h=e.indexOf("%wcache")+1,g=e.indexOf("pread/s")+1,m=e.indexOf("pwrit/s")+1;i=t.splice(0,2).join("-");1==DEBUG&&console.log(e+" | "+i+" | bread/s:"+s+" | bwrit/s:"+c+" | lread/s:"+u+" | lwrit/s:"+d+" | %rcache:"+p+" | %wcache:"+h+" | %pread/s:"+g+" | pwrit/s:"+m),printMultiChart("containerA","Reports the number of block I/O operations","bread/s | bwrit/s",1e3,[{name:"Block I/O read operations",shadow:!0,data:getGenericData(i,s,"no",null)},{name:"Block I/O write operations",shadow:!0,data:getGenericData(i,c,"no",null)}]),printMultiChart("containerB","Reports the number of logical I/O requests","lread/s | lwrit/s",1e3,[{name:"Logical I/O Read requests",shadow:!0,data:getGenericData(i,u,"no",null)},{name:"Logical I/O Write requests",shadow:!0,data:getGenericData(i,d,"no",null)}]),printMultiChart("containerC","Reports the number of I/O operations on raw devices","pread/s | pwrit/s",1e3,[{name:"Raw I/O read operations",shadow:!0,data:getGenericData(i,g,"no",null)},{name:"Raw I/O write operations",shadow:!0,data:getGenericData(i,m,"no",null)}]),printMultiChart("containerD","Reports caching effectiveness (cache hit percentage)","%rcache | %wcache",1e3,[{name:"Read Cache Hit Percentage",shadow:!0,data:getGenericData(i,p,"no",null)},{name:"Write Cache Hit Percentage",shadow:!0,data:getGenericData(i,h,"no",null)}])}else showBlock("M"),showNotes("M","No data found");break;case"SUNOS":printMultiChart("containerA","Buffers","(Block Reads)",null,[{name:"IO (Block Reads)",shadow:!0,data:getGenericData("bread/s-lread/s",1,"no",null)},{name:"IO (Read Access of Buffers)",shadow:!0,data:getGenericData("bread/s-lread/s",2,"no",null)},{name:"IO (Read Cache)",shadow:!0,data:getGenericData("bread/s-lread/s",3,"no",null)},{name:"IO (Physical Read)",shadow:!0,data:getGenericData("bread/s-lread/s",7,"no",null)}]),printMultiChart("containerB","Buffers","(Block Writes)",null,[{name:"IO (Block Writes)",shadow:!0,data:getGenericData("bread/s-lread/s",4,"no",null)},{name:"IO (Write Access of Buffers)",shadow:!0,data:getGenericData("bread/s-lread/s",5,"no",null)},{name:"IO (Write Cache)",shadow:!0,data:getGenericData("bread/s-lread/s",6,"no",null)},{name:"IO (Physical Write)",shadow:!0,data:getGenericData("bread/s-lread/s",8,"no",null)}]),hideBlock("C"),hideBlock("D")}}),$("#btnPage").click(function(){switch(displayTitle("Page"),getOS()){case"LINUX":printChart("containerA",null,null,"Number of memory pages freed per second (frmpg/s)",100,"#166c7d",getGenericData("frmpg/s-bufpg/s",1,"no",null)),printChart("containerB",null,null,"Number of additional memory pages used as buffers per second (bufpg/s)",null,bluishPurple,getGenericData("frmpg/s-bufpg/s",2,"no",null)),printChart("containerC",null,null,"Number of additional memory pages cached per second (campg/s)",100,"#90ee7e",getGenericData("frmpg/s-bufpg/s",3,"no",null)),hideBlock("D")}}),$("#btnMemAlloc").click(function(){switch(displayTitle("Memory"),getOS()){case"LINUX":case"AIX":break;case"SUNOS":printMultiChart("containerA","Kernel Memory Allocation (Small)","sml_mem|alloc|fail",null,[{name:"Small Page",shadow:!0,data:getGenericData("sml_mem-alloc",1,"no",null)},{name:"Canon character rate",shadow:!0,data:getGenericData("sml_mem-alloc",2,"no",null)},{name:"Output character rate",shadow:!0,data:getGenericData("sml_mem-alloc",3,"no",null)}]),printMultiChart("containerB","Kernel Memory Allocation (Large)","lg_mem|alloc|fail",null,[{name:"Large Page",shadow:!0,data:getGenericData("sml_mem-alloc",4,"no",null)},{name:"Transmit Interrupt rate",shadow:!0,data:getGenericData("sml_mem-alloc",5,"no",null)},{name:"Modem Interrupt rate",shadow:!0,data:getGenericData("sml_mem-alloc",6,"no",null)}]),printMultiChart("containerC","Kernel Memory Allocation (Oversized)","ovsz_alloc|fail",null,[{name:"Oversized Page",shadow:!0,data:getGenericData("sml_mem-alloc",7,"no",null)},{name:"Transmit Interrupt rate",shadow:!0,data:getGenericData("sml_mem-alloc",8,"no",null)}]),hideBlock("D")}}),$("#btnLoad").click(function(){switch(displayTitle("Load"),getOS()){case"LINUX":if(-1!=(p=grepHeaders("runq-sz"))){var e=p.split(","),t=[...e],a=e.indexOf("runq-sz")+1,n=e.indexOf("plist-sz")+1,r=e.indexOf("ldavg-1")+1,s=e.indexOf("ldavg-5")+1,o=e.indexOf("ldavg-15")+1,i=e.indexOf("blocked")+1,l=t.splice(0,2).join("-");1==DEBUG&&console.log(e+" -- "+l+" -- "+a+" -- "+n+" -- "+r+" -- "+s+" -- "+o),printChart("containerA",0,null,"Run queue length [no. of tasks waiting for run time] (runq-sz)",null,lightBurgundy,getGenericData(l,a,"no",null)),printMultiChart("containerB","System Load Average","System Load Average",null,[{name:"System load average for the last minute",data:getGenericData(l,r,"no",null)},{name:"System load average for the past 5 minutes",data:getGenericData(l,s,"no",null)},{name:"System load average for the past 15 minutes",data:getGenericData(l,o,"no",null)}]),printChart("containerC",null,null,"Number of tasks in task list (plist-sz)",null,dodgerBlue,getGenericData(l,n,"no",null)),i>1?printChart("containerD",null,null,"Number of tasks currently blocked, waiting for I/O to complete (blocked)",null,darkBrown,getGenericData(l,i,"no",null)):hideBlock("D")}else showBlock("M"),showNotes("M","No data found");break;case"AIX":if(-1!=(p=grepHeaders("runq-sz"))){e=p.split(","),t=[...e],a=e.indexOf("runq-sz")+1;var c=e.indexOf("%runocc")+1,u=e.indexOf("swpq-sz")+1,d=e.indexOf("%swpocc")+1;l=t.splice(0,2).join("-");1==DEBUG&&console.log(e+" | "+l+" | runq-sz:"+a+" | %runocc:"+c+" | swpq-sz:"+u+" | %swpocc:"+d),printChart("containerA",0,null,"Run queue length [number of tasks waiting for run time] (runq-sz)",null,lightBurgundy,getGenericData(l,1,"no",null)),printChart("containerB",null,null,"Percentage of the time the run queue is occupied (%runocc)",null,dodgerBlue,getGenericData(l,c,"no",null)),printChart("containerC",null,null,"Average number of kernel threads that are waiting on resources (swpq-sz)",null,bluishPurple,getGenericData(l,u,"no",null)),printChart("containerD",null,null,"Percentage of the time the swap queue is occupied (%swpocc)",null,darkBrown,getGenericData(l,d,"no",null))}else showBlock("M"),showNotes("M","No data found");break;case"SUNOS":var p;if(-1!=(p=grepHeaders("runq-sz"))){e=p.split(","),t=[...e],a=e.indexOf("runq-sz")+1,c=e.indexOf("%runocc")+1,u=e.indexOf("swpq-sz")+1,d=e.indexOf("%swpocc")+1,l=t.splice(0,2).join("-");1==DEBUG&&console.log(e+" | "+l+" | runq-sz:"+a+" | %runocc:"+c+" | swpq-sz:"+u+" | %swpocc:"+d),printChart("containerA",0,null,"Run queue of kernel threads in memory and runnable (runq-sz)",null,lightBurgundy,getGenericData(l,a,"no",null)),printChart("containerB",null,null,"Percentage of the time the run queue is occupied (%runocc)",null,dodgerBlue,getGenericData(l,c,"no",null)),printChart("containerC",null,null,"Swap queue of processes (swpq-sz)",null,bluishPurple,getGenericData("runq-sz-%runocc",u,"no",null)),printChart("containerD",null,null,"Percentage of the time the swap queue is occupied (%swpocc)",null,darkBrown,getGenericData(l,d,"no",null))}else showBlock("M"),showNotes("M","No data found")}}),$("#btnNFSClient").click(function(){switch(displayTitle("NFS Client"),getOS()){case"LINUX":printMultiChart("containerA","Number of RPC requests made per second","call/s | retrans/s",null,[{name:"Number of RPC requests made per second (call/s)",shadow:!0,data:getGenericData("call/s-retrans/s",1,"no",null)},{name:"The total number of segments retransmitted per second (retrans/s)",shadow:!0,data:getGenericData("call/s-retrans/s",2,"no",null)}]),printMultiChart("containerB",'Number of "read/write" RPC calls made per second',"read/s | write/s",null,[{name:"Number of 'read' RPC calls made per second (read/s)",shadow:!0,data:getGenericData("call/s-retrans/s",3,"no",null)},{name:"Number of 'write' RPC calls made per second (write/s)",shadow:!0,data:getGenericData("call/s-retrans/s",4,"no",null)}]),printMultiChart("containerC",'Number of "access/getatt" RPC calls made per second',"access/s getatt/s",null,[{name:"Number of 'access' RPC calls made per second (access/s)",shadow:!0,data:getGenericData("call/s-retrans/s",5,"no",null)},{name:"Number of 'getattr' RPC calls made per second (getatt/s)",shadow:!0,data:getGenericData("call/s-retrans/s",6,"no",null)}]),hideBlock("D");break;case"AIX":$("#containerA").html("No data for NFS Client available"),hideBlock("B"),hideBlock("C"),hideBlock("D")}}),$("#btnNFSServer").click(function(){switch(displayTitle("NFS Server"),getOS()){case"LINUX":printMultiChart("containerA","Number of RPC requests received per second","scall/badcall/saccess/sgetatt per second",null,[{name:"Number of RPC requests received per second (scall/s)",shadow:!0,data:getGenericData("scall/s-badcall/s",1,"no",null)},{name:"Number of bad RPC requests received per second (badcall/s)",shadow:!0,data:getGenericData("scall/s-badcall/s",2,"no",null)},{name:"Number of 'access' RPC calls received per second (saccess/s)",shadow:!0,data:getGenericData("scall/s-badcall/s",10,"no",null)},{name:"Number of 'getattr' RPC calls received per second (sgetatt/s)",shadow:!0,data:getGenericData("scall/s-badcall/s",11,"no",null)}]),printMultiChart("containerB","Number of network packets received per second","packet/udp/tcp per second",null,[{name:"Number of network packets received per second (packet/s)",shadow:!0,data:getGenericData("scall/s-badcall/s",3,"no",null)},{name:"Number of UDP packets received per second (udp/s)",shadow:!0,data:getGenericData("scall/s-badcall/s",4,"no",null)},{name:"Number of TCP packets received per second (tcp/s)",shadow:!0,data:getGenericData("scall/s-badcall/s",5,"no",null)}]),printMultiChart("containerC",'Number of "hit/miss/sread/swrite" received per second',"hit/miss/sread/swrite per second",null,[{name:"Number of reply cache hits per second (hit/s)",shadow:!0,data:getGenericData("scall/s-badcall/s",6,"no",null)},{name:"Number of reply cache misses per second (miss/s)",shadow:!0,data:getGenericData("scall/s-badcall/s",7,"no",null)},{name:"Number of 'read' RPC calls received per second (sread/s)",shadow:!0,data:getGenericData("scall/s-badcall/s",8,"no",null)},{name:"Number of 'write' RPC calls received per second (swrite/s)",shadow:!0,data:getGenericData("scall/s-badcall/s",9,"no",null)}]);break;case"AIX":printMultiChart("containerA","NFS Server","scall/sread/swrit /s",null,[{name:"scall/s",shadow:!0,data:getGenericData("scall/s-sread/s",1,"no",null)},{name:"sread/s",shadow:!0,data:getGenericData("scall/s-sread/s",2,"no",null)},{name:"swrit/s",shadow:!0,data:getGenericData("scall/s-sread/s",3,"no",null)}]),printMultiChart("containerB","NFS Server","fork/exec /s",null,[{name:"fork/s",shadow:!0,data:getGenericData("scall/s-sread/s",4,"no",null)},{name:"exec/s",shadow:!0,data:getGenericData("scall/s-sread/s",5,"no",null)}]),printMultiChart("containerC","NFS Server","rchar/wchar /s",null,[{name:"rchar/s",shadow:!0,data:getGenericData("scall/s-sread/s",6,"no",null)},{name:"wchar/s",shadow:!0,data:getGenericData("scall/s-sread/s",7,"no",null)}])}hideBlock("D")}),$("#btnSysCalls").click(function(){switch(displayTitle("System Calls"),getOS()){case"LINUX":break;case"AIX":case"SUNOS":var e=grepHeaders("scall/s");if(-1!=e){var t=e.split(","),a=[...t],n=t.indexOf("scall/s")+1,r=t.indexOf("sread/s")+1,s=t.indexOf("swrit/s")+1,o=t.indexOf("fork/s")+1,i=t.indexOf("exec/s")+1,l=t.indexOf("rchar/s")+1,c=t.indexOf("wchar/s")+1,u=a.splice(0,2).join("-");1==DEBUG&&console.log(t+" | "+u+" | scall/s:"+n+" | sread/s:"+r+" | swrit/s:"+s+" | fork/s:"+o+" | exec/s:"+i+" | rchar/s:"+l+" | wchar/s:"+c),printMultiChart("containerA","Total number of read/write system calls","sread/s |swrit/s",null,[{name:"sread/s",shadow:!0,data:getGenericData(u,r,"no",null)},{name:"swrit/s",shadow:!0,data:getGenericData(u,s,"no",null)}]),printMultiChart("containerB","Total number of system calls","scall/s",null,[{name:"scall/s",shadow:!0,data:getGenericData(u,n,"no",null)}]),printMultiChart("containerC","Total number of fork and exec system calls","fork/s | exec/s",null,[{name:"fork/s",shadow:!0,data:getGenericData(u,o,"no",null)},{name:"exec/s",shadow:!0,data:getGenericData(u,i,"no",null)}]),printMultiChart("containerD","Total number of characters transferred by read/write system calls","rchar/s | wchar/s",null,[{name:"rchar/s",shadow:!0,data:getGenericData(u,l,"no",null)},{name:"wchar/s",shadow:!0,data:getGenericData(u,c,"no",null)}])}else showBlock("M"),showNotes("M","No data found")}}),$("#btnSockets").click(function(){switch(displayTitle("Sockets"),getOS()){case"LINUX":var e=grepHeaders("totsck");if(-1!=e){var t=e.split(","),a=[...t],n=t.indexOf("totsck")+1,r=t.indexOf("ip-frag")+1,s=t.indexOf("tcpsck")+1,o=t.indexOf("udpsck")+1,i=t.indexOf("rawsck")+1,l=a.splice(0,2).join("-");1==DEBUG&&console.log(t+" | "+l+" | totsck:"+n+" | ip-frag:"+r+" | tcpsck:"+s+" | udpsck:"+o+" | rawsck:"+i),printChart("containerA",100,null,"Total number of sockets used by the system (totsck)",null,"#166c7d",getGenericData(l,n,"no",null)),printChart("containerB",null,null,"Number of IP fragments currently in use (ip-frag)",null,"#527bad",getGenericData(l,r,"no",null)),printMultiChart("containerC","Number of Sockets currently in use","tcp/udp/raw sockets",1,[{name:"Number of TCP sockets (tcpsck)",shadow:!0,data:getGenericData(l,s,"no",null)},{name:"Number of UDP sockets (udpsck)",shadow:!0,data:getGenericData(l,o,"no",null)},{name:"Number of RAW sockets (rawsck)",shadow:!0,data:getGenericData(l,i,"no",null)}]),hideBlock("D")}else showBlock("M"),showNotes("M","No data found")}}),$("#btnSwapUsg").click(function(){switch(displayTitle("Swap Usage"),getOS()){case"LINUX":var e=grepHeaders("kbswpfree");if(-1!=e){var t=e.split(","),a=[...t],n=t.indexOf("kbswpfree")+1,r=t.indexOf("kbswpused")+1,s=t.indexOf("%swpused")+1,o=t.indexOf("%swpcad")+1,i=a.splice(0,2).join("-");1==DEBUG&&console.log(t+" -- "+i+" -- "+n+" -- "+r+" -- "+s),printChart("containerA",0,null,"Amount of free swap space in kilobytes (kbswpfree)",null,"#166c7d",getGenericData(i,n,"no",null)),printMultiChart("containerB","Amount of used swap space in kilobytes","kbswpused | kbswpcad ",null,[{name:"Amount of used swap space in kilobytes (kbswpused)",shadow:!0,data:getGenericData(i,s,"no",null)},{name:"Amount of cached swap memory in kilobytes (kbswpcad)",shadow:!0,data:getGenericData(i,o,"no",null)}]),showNotes("B","kbswpcad - This is memory that once was swapped out, is swapped back in but still also is in the swap area (if memory is needed it doesn't need to be swapped out again because it is already in the swap area. This saves I/O)."),printMultiChart("containerC","Percentage of used swap space","%swpused | %swpcad ",null,[{name:"Percentage of used swap space (%swpused)",shadow:!0,data:getGenericData(i,s,"no",null)},{name:"Percentage of cached swap memory of used swap space (%swpcad)",shadow:!0,data:getGenericData(i,o,"no",null)}]),hideBlock("D")}else showBlock("M"),showNotes("M","No data found");break;case"AIX":break;case"SUNOS":printChart("containerA",0,null,"Disk Blocks Available (freeswap)",null,"#166c7d",getGenericData("freemem-freeswap",2,"no",null)),hideBlock("B"),hideBlock("C"),hideBlock("D")}}),$("#btnMemFree").click(function(){switch(displayTitle("Memory Free"),getOS()){case"LINUX":var e=grepHeaders("kbmemfree");if(-1!=e){var t=e.split(","),a=[...t],n=t.indexOf("kbmemfree")+1,r=t.indexOf("kbbuffers")+1,s=t.indexOf("kbcached")+1,o=a.splice(0,2).join("-");1==DEBUG&&console.log(t+" -- "+o+" -- "+n+" -- "+r+" -- "+s),printChart("containerA",null,null,"Total Memory Free (kbmemfree+kbbuffers+kbcached)",100,crimsonRed,getMemoryFreeData(o,n,"no",null)),printChart("containerB",0,null,"Amount of free memory available in kilobytes (kbmemfree)",102400,darkPink,getGenericData(o,n,"no",null)),printChart("containerC",0,null,"Amount of memory used as buffers by the kernel in kilobytes (kbbuffers)",102400,bluishTeal,getGenericData(o,r,"no",null)),printChart("containerD",null,null,"Amount of memory used to cache data by the kernel in kilobytes (kbcached)",null,bluishPurple,getGenericData(o,s,"no",null))}else showBlock("M"),showNotes("M","No data found")}}),$("#btnMemUsg").click(function(){switch(displayTitle("Memory Usage"),getOS()){case"LINUX":if(-1!=(i=grepHeaders("kbmemfree"))){var e=i.split(","),t=[...e],a=e.indexOf("%memused")+1,n=e.indexOf("kbmemused")+1,r=e.indexOf("kbcommit")+1,s=e.indexOf("%commit")+1,o=t.splice(0,2).join("-");1==DEBUG&&console.log(e+" -- "+o+" -- "+a+" -- "+n+" -- "+r+" -- "+s),printChart("containerA",null,null,"Percentage of used memory (%memused)",100,"#55BF3B",getGenericData(o,a,"no",null)),printChart("containerB",null,null,"Amount of used memory in kilobytes (kbmemused)",null,"#527bad",getGenericData(o,n,"no",null)),showNotes("B","kbmemused - This does not take into account memory used by the kernel"),printChart("containerC",null,null,"Amount of memory in kilobytes needed for current workload (kbcommit)",null,"#8d4654",getGenericData(o,r,"no",null)),showNotes("C","kbcommit - This is an estimate of how much RAM/swap is needed to guarantee that there never is out of memory."),printChart("containerD",null,null,"Percentage of memory needed for current workload [RAM+swap] (%commit)",null,"#f45b5b",getGenericData(o,s,"no",null)),showNotes("D","%commit - This number may be greater than 100% because the kernel usually overcommits memory.")}else showBlock("M"),showNotes("M","No data found");break;case"AIX":case"SUNOS":var i;if(-1!=(i=grepHeaders("msg/s"))){e=i.split(","),t=[...e];var l=e.indexOf("msg/s")+1,c=e.indexOf("sema/s")+1;o=t.splice(0,2).join("-");1==DEBUG&&console.log(e+" -- "+o+" -- msg/s:"+l+" -- sema/s:"+c),printChart("containerA",0,null,"Number of IPC message primitives (msg/s)",null,crimsonRed,getGenericData(o,l,"no",null)),showNotes("A","Reports message (sending and receiving) activities per second"),printChart("containerB",null,null,"Number of IPC semaphore primitives (sema/s)",null,bluishPurple,getGenericData(o,c,"no",null)),showNotes("B","Reports semaphore (creating, using, or destroying) activities per second"),hideBlock("C"),hideBlock("D")}else showBlock("M"),showNotes("M","No data found")}}),function(e){function t(e,t){var a;t&&"function"==typeof t&&(e.dataTransfer?a=e.dataTransfer.files:e.target&&(a=e.target.files),t.call(null,a))}e.makeDroppable=function(e,a){var n=document.createElement("input");n.setAttribute("type","file"),n.setAttribute("multiple",!0),n.style.display="none",n.addEventListener("change",function(e){t(e,a)}),e.appendChild(n),e.addEventListener("dragover",function(t){t.preventDefault(),t.stopPropagation(),e.classList.add("dragover")}),e.addEventListener("dragleave",function(t){t.preventDefault(),t.stopPropagation(),e.classList.remove("dragover")}),e.addEventListener("drop",function(n){n.preventDefault(),n.stopPropagation(),e.classList.remove("dragover"),t(n,a)}),e.addEventListener("click",function(){n.value=null,n.click()})}}(this),$(function(){"use strict";defaultPage(),showModal(),$("#sidebarCollapse").hide("fast"),$("#sidebarCollapse").on("click",function(){$("#sidebar").toggleClass("active")}),$(document).on("change",".btn-file :file",function(){var e=$(this),t=e.get(0).files?e.get(0).files.length:1,a=e.val().replace(/\\/g,"/").replace(/[\w\W]*\//,"");e.trigger("fileselect",[t,a])}),$(".btn-file :file").on("fileselect",function(e,t,a){var n=t>1?t+" files selected":a;n?(file&&getAsText(file),show("#spinner"),1===DEBUG&&console.log("Start spinner from btn select"),$("#spinner").removeClass("d-none").addClass("d-block"),updateProgress(10)):n&&alert(n)}),document.querySelectorAll('a[href^="#_"]').forEach(e=>{e.addEventListener("click",function(e){e.preventDefault(),document.querySelector(this.getAttribute("href")).scrollIntoView({behavior:"smooth"})})}),makeDroppable(window.document.querySelector(".sar-file-uploader"),function(e){var t=document.querySelector(".fileinput-filename");t.innerHTML="";for(var a=0;a<e.length;a++)t.innerHTML+=""+e[a].name,file=e[a],show("#spinner"),$("#spinner").removeClass("d-none").addClass("d-block"),1===DEBUG&&console.log("Start spinner from drag"),1===DEBUG&&console.log(file.name),getAsText(file)}),$("#toggle-button").click(function(){var e=220==$("#nav-container").width()?"40px":"220px";"40px"==e?($(".menu").hide(),$("#nav-container").css({width:e})):($("#nav-container").css({width:e}),$(".menu").show())})});